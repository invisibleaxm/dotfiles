# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'aserowy/tmux.nvim'


#######
# ui and colors
######
# Start counting pane and window number at 1
set-option -sg escape-time 10
set-option -g focus-events on

set -g base-index 1
setw -g pane-base-index 1

set-option -g default-terminal "screen-256color"
set-option -sa terminal-features ',xterm-256color:RGB'
set-option -g status-style 'bg=#333333 fg=#5eacd3'

# reload configuration
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
######

########################################################
# vim-like pane mode and pane switching
set-window-option -g mode-keys vi
# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs
set -g mouse on
# bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
# bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel
# unbind -T copy-mode-vi MouseDragEnd1Pane
# unbind [
# bind Escape copy-mode
# unbind p
# bind p paste-buffer
#

is_vim="children=(); i=0; pids=( $(ps -o pid= -t '#{pane_tty}') ); \
while read -r c p; do [[ -n c && c -ne p && p -ne 0 ]] && children[p]+=\" $\{c\}\"; done <<< \"$(ps -Ao pid=,ppid=)\"; \
while (( $\{#pids[@]\} > i )); do pid=$\{pids[i++]\}; pids+=( $\{children[pid]-\} ); done; \
ps -o state=,comm= -p \"$\{pids[@]\}\" | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|fzf)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# bind -r ^ last-window
# bind -r k select-pane -U
# bind -r j select-pane -D
# bind -r h select-pane -L
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
############################################################

#######
# split panes using | and -
#######
bind-key -r | split-window -h
bind-key -r - split-window -v
unbind '"'
unbind %
# resize and maximize pane
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5
bind -r m resize-pane -Z

bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/dev/personal/configs/todo.md"
# forget the find window.  That is for chumps
bind-key f run-shell "tmux neww ~/.zsh_autoload_functions/tmux_sessionizer"
# bind -r f run-shell "tmux neww ~/.zsh_autoload_functions/tmux_sessionizer"

run '~/.tmux/plugins/tpm/tpm'
